npm i && rm dist -fr && npm run libs && npm run publish-lib-idp-local

+ crear lib @vapaee/wallet
  + API: inspirarse en el actual scatter pero sacar lo deprecado y referente a Scatter
  + aÃ±adir el concepto de indentity-provider (Scatter, Local, ParentFrame)
+ crear lib @vapaee/idp-scatter
+ crear lib @vapaee/idp-local
- crear lib @vapaee/idp-pframe
  + investigar: https://github.com/EOSDAQ/eosdaq-embed/blob/master/eosdaq.js
  + code /home/viter/Descargas/Telegram\ Desktop/Newdex-Embed-API.txt


eos / telos
https://api.light.xeos.me/api/key/EOS7JYMQL2QE8XLYqoEwHgAhbhdf3nhZFnCpeRrdRyLVTWUcBza9N

jungle
https://lightapi.eosgeneva.io/api/key/EOS7JYMQL2QE8XLYqoEwHgAhbhdf3nhZFnCpeRrdRyLVTWUcBza9N

bos / wax / proton
https://lightapi.eosamsterdam.net/api/key/EOS7JYMQL2QE8XLYqoEwHgAhbhdf3nhZFnCpeRrdRyLVTWUcBza9N

https://hyperion.coffe.io/api/key/EOS7JYMQL2QE8XLYqoEwHgAhbhdf3nhZFnCpeRrdRyLVTWUcBza9N






  --- Uso actual de scatter --
    // ------
    await this.scatter.init("assets/endpoints.json");
    // ------
    this.connexion = await this.scatter.createConnexion(this.network);
    this.connexion.connect(appname).catch(e => {
        console.error(e);
    });

    this.connexion.waitConnected.then(() => this.updateLogState() );
    this.telosbookdex = this.connexion.getContract(telosbookdex);
    this.vapaeetokens = this.connexion.getContract(vapaeetokens);
    
    this.connexion.telos.autologin();

    // ------
    this.telosbookdex.excecute("order", {
        owner:  this.connexion.account.name,
        type: type,
        total: amount.toString(8),
        price: price.toString(8),
        ui: ui
    });

    // ------
    this.scatter.logout();

    // ------
    return this.scatter.queryAccountData(name).catch(async _ => {
        console.log("VapaeeDEX.getAccountData('"+name+"') -> ", [this.default.data]);
        return this.default.data;
    });

    // ------
    this.contract = await this.scatter.getContractWrapper(this.contract_name);
    this.connexion = await this.scatter.getConnexion(null);
    // this.wallet.resetIdentity();

--- NUEVO USO DE @vapaee/wallet --------------
this.connexion = await this.scatter.createConnexion(this.network);

